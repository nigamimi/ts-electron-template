{
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier"
    ],
    "plugins": ["@typescript-eslint"],
    "env": { "node": true, "es6": true, "jest": true },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "sourceType": "module",
        "project": ["./tsconfig.eslint.json"]
    },
    "rules": {
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                "varsIgnorePattern": "^_",
                "argsIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/naming-convention": [
            "warn",
            { "selector": "default", "format": ["strictCamelCase"] },
            { "selector": "variableLike", "format": ["strictCamelCase"] },
            { "selector": "typeLike", "format": ["PascalCase"] },
            //object literal / data class / type / interface for external json could be snake_case.
            //other then, prefers strictCamelCase but may be loose camelCase.
            {
                "selector": "memberLike",
                "format": ["camelCase", "snake_case"]
            },
            //private member always needs to have leading underscore.
            {
                "selector": "memberLike",
                "modifiers": ["private"],
                "format": null,
                "leadingUnderscore": "require"
            },
            //function parameter related options
            {
                "selector": "parameter",
                "format": ["camelCase"],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "require"
            },
            {
                "selector": "parameter",
                "format": ["camelCase"],
                "modifiers": ["unused"],
                "leadingUnderscore": "require",
                "trailingUnderscore": "forbid"
            },
            // parameters can have units
            {
                "selector": "parameter",
                "format": ["camelCase"],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "require",
                "suffix": [
                    "_m",
                    "_meter",
                    "_km",
                    "_cm",
                    "_mm",
                    "_g",
                    "_mg",
                    "_kg",
                    "_s",
                    "_sec",
                    "_ms",
                    "_min",
                    "_h"
                ],
                "filter": {
                    "regex": "_(m|meter|km|cm|mm|g|mg|kg|s|sec|ms|min|h)_?$",
                    "match": true
                }
            },
            {
                "selector": "parameter",
                "format": null,
                "modifiers": ["destructured", "unused"],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow"
            },
            {
                "selector": "parameter",
                "format": null,
                "modifiers": ["destructured"],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow"
            },
            //function name convention
            //unexported function allowed to have leading underscore.
            {
                "selector": "function",
                "format": ["strictCamelCase", "PascalCase"]
            },
            {
                "selector": "function",
                "format": null,
                "leadingUnderscore": "require"
            },
            {
                "selector": "function",
                "format": null,
                "modifiers": ["exported"],
                "leadingUnderscore": "forbid"
            },
            //variable name convention
            //unexported variable allowed to have leading underscore.
            {
                "selector": "variable",
                "format": ["strictCamelCase"],
                "leadingUnderscore": "allow"
            },
            {
                "selector": "variable",
                "format": ["strictCamelCase"],
                "modifiers": ["exported"],
                "leadingUnderscore": "forbid"
            }
        ]
    }
}
